{
  "name": "Tensorflowdev",
  "tagline": "tensorflowDev主要记录我的一些学习tensorflow的代码。",
  "body": "这些案例适合那些想要清晰简明的 TensorFlow 实现案例的初学者。本教程还包含了笔记和带有注解的代码。\r\n\r\n[项目地址](https://github.com/aymericdamien/TensorFlow-Examples)\r\n## 教程索引\r\n\r\n### 0 - 先决条件\r\n\r\n[机器学习入门](https://github.com/aymericdamien/TensorFlow-Examples/blob/master/notebooks/0_Prerequisite)/ml_introduction.ipynb\r\n\r\nMNIST 数据集入门\r\n\r\n[笔记](https://github.com/aymericdamien/TensorFlow-Examples/blob/master/notebooks/0_Prerequisite/mnist_dataset_intro.ipynb)\r\n### 1 - 入门\r\n\r\nHello World：\r\n\r\n[笔记](https://github.com/aymericdamien/TensorFlow-Examples/blob/master/notebooks/1_Introduction/helloworld.ipynb)\r\n\r\n[代码](https://github.com/aymericdamien/TensorFlow-Examples/blob/master/examples/1_Introduction/helloworld.py)\r\n\r\n基本操作：\r\n\r\n[笔记](https://github.com/aymericdamien/TensorFlow-Examples/blob/master/notebooks/1_Introduction/basic_operations.ipynb)\r\n\r\n[代码](https://github.com/aymericdamien/TensorFlow-Examples/blob/master/examples/1_Introduction/basic_operations.py)\r\n\r\n### 2 - 基本模型\r\n\r\n最近邻：\r\n\r\n[笔记](https://github.com/aymericdamien/TensorFlow-Examples/blob/master/notebooks/2_BasicModels/nearest_neighbor.ipynb)\r\n\r\n[代码](https://github.com/aymericdamien/TensorFlow-Examples/blob/master/examples/2_BasicModels/nearest_neighbor.py)\r\n\r\n线性回归：\r\n\r\n笔记：https://github.com/aymericdamien/TensorFlow-Examples/blob/master/notebooks/2_BasicModels/linear_regression.ipynb\r\n\r\n代码：https://github.com/aymericdamien/TensorFlow-Examples/blob/master/examples/2_BasicModels/linear_regression.py\r\n\r\nLogistic 回归：\r\n\r\n笔记：https://github.com/aymericdamien/TensorFlow-Examples/blob/master/notebooks/2_BasicModels/logistic_regression.ipynb\r\n\r\n代码：https://github.com/aymericdamien/TensorFlow-Examples/blob/master/examples/2_BasicModels/logistic_regression.py\r\n\r\n### 3 - 神经网络\r\n\r\n多层感知器：\r\n\r\n笔记：https://github.com/aymericdamien/TensorFlow-Examples/blob/master/notebooks/3_NeuralNetworks/multilayer_perceptron.ipynb\r\n\r\n代码：https://github.com/aymericdamien/TensorFlow-Examples/blob/master/examples/3_NeuralNetworks/multilayer_perceptron.py\r\n\r\n卷积神经网络：\r\n\r\n笔记：https://github.com/aymericdamien/TensorFlow-Examples/blob/master/notebooks/3_NeuralNetworks/convolutional_network.ipynb\r\n\r\n代码：https://github.com/aymericdamien/TensorFlow-Examples/blob/master/examples/3_NeuralNetworks/convolutional_network.py\r\n\r\n循环神经网络（LSTM）：\r\n\r\n笔记：https://github.com/aymericdamien/TensorFlow-Examples/blob/master/notebooks/3_NeuralNetworks/recurrent_network.ipynb\r\n\r\n代码：https://github.com/aymericdamien/TensorFlow-Examples/blob/master/examples/3_NeuralNetworks/recurrent_network.py\r\n\r\n双向循环神经网络（LSTM）：\r\n\r\n笔记：https://github.com/aymericdamien/TensorFlow-Examples/blob/master/notebooks/3_NeuralNetworks/bidirectional_rnn.ipynb\r\n\r\n代码：https://github.com/aymericdamien/TensorFlow-Examples/blob/master/examples/3_NeuralNetworks/bidirectional_rnn.py\r\n\r\n动态循环神经网络（LSTM）\r\n\r\n代码：https://github.com/aymericdamien/TensorFlow-Examples/blob/master/examples/3_NeuralNetworks/dynamic_rnn.py\r\n\r\n自编码器\r\n\r\n笔记：https://github.com/aymericdamien/TensorFlow-Examples/blob/master/notebooks/3_NeuralNetworks/autoencoder.ipynb\r\n\r\n代码：https://github.com/aymericdamien/TensorFlow-Examples/blob/master/examples/3_NeuralNetworks/autoencoder.py\r\n### 4 - 实用技术\r\n\r\n保存和恢复模型\r\n\r\n笔记：https://github.com/aymericdamien/TensorFlow-Examples/blob/master/notebooks/4_Utils/save_restore_model.ipynb\r\n\r\n代码：https://github.com/aymericdamien/TensorFlow-Examples/blob/master/examples/4_Utils/save_restore_model.py\r\n图和损失可视化\r\n\r\n笔记：https://github.com/aymericdamien/TensorFlow-Examples/blob/master/notebooks/4_Utils/tensorboard_basic.ipynb\r\n\r\n代码：https://github.com/aymericdamien/TensorFlow-Examples/blob/master/examples/4_Utils/tensorboard_basic.py\r\n\r\n### Tensorboard——高级可视化\r\n\r\n代码：https://github.com/aymericdamien/TensorFlow-Examples/blob/master/examples/4_Utils/tensorboard_advanced.py\r\n\r\n###5 - 多 GPU\r\n\r\n多 GPU 上的基本操作\r\n\r\n笔记：https://github.com/aymericdamien/TensorFlow-Examples/blob/master/notebooks/5_MultiGPU/multigpu_basics.ipynb\r\n\r\n代码：https://github.com/aymericdamien/TensorFlow-Examples/blob/master/examples/5_MultiGPU/multigpu_basics.py\r\n\r\n数据集\r\n\r\n一些案例需要 MNIST 数据集进行训练和测试。不要担心，运行这些案例时，该数据集会被自动下载下来（使用 input_data.py）。MNIST 是一个手写数字的数据库，查看这个笔记了解关于该数据集的描述：https://github.com/aymericdamien/TensorFlow-Examples/blob/master/notebooks/0_Prerequisite/mnist_dataset_intro.ipynb\r\n\r\n官方网站：http://yann.lecun.com/exdb/mnist/\r\n\r\n更多案例\r\n\r\n接下来的示例来自 TFLearn（https://github.com/tflearn/tflearn），这是一个为 TensorFlow 提供了简化的接口的库。你可以看看，这里有很多示例和预构建的运算和层。\r\n\r\n示例：https://github.com/tflearn/tflearn/tree/master/examples\r\n\r\n预构建的运算和层：http://tflearn.org/doc_index/#api\r\n\r\n##教程\r\n\r\nTFLearn 快速入门。通过一个具体的机器学习任务学习 TFLearn 基础。开发和训练一个深度神经网络分类器。\r\n\r\n笔记：https://github.com/tflearn/tflearn/blob/master/tutorials/intro/quickstart.md\r\n\r\n### 基础\r\n\r\n线性回归，使用 TFLearn 实现线性回归：https://github.com/tflearn/tflearn/blob/master/examples/basics/linear_regression.py\r\n\r\n逻辑运算符。使用 TFLearn 实现逻辑运算符：https://github.com/tflearn/tflearn/blob/master/examples/basics/logical.py\r\n\r\n权重保持。保存和还原一个模型：https://github.com/tflearn/tflearn/blob/master/examples/basics/weights_persistence.py\r\n\r\n微调。在一个新任务上微调一个预训练的模型：https://github.com/tflearn/tflearn/blob/master/examples/basics/finetuning.py\r\n\r\n使用 HDF5。使用 HDF5 处理大型数据集：https://github.com/tflearn/tflearn/blob/master/examples/basics/use_hdf5.py\r\n\r\n使用 DASK。使用 DASK 处理大型数据集：https://github.com/tflearn/tflearn/blob/master/examples/basics/use_dask.py\r\n\r\n### 计算机视觉\r\n\r\n多层感知器。一种用于 MNIST 分类任务的多层感知实现：https://github.com/tflearn/tflearn/blob/master/examples/images/dnn.py\r\n卷积网络（MNIST）。用于分类 MNIST 数据集的一种卷积神经网络实现：https://github.com/tflearn/tflearn/blob/master/examples/images/convnet_mnist.py\r\n\r\n卷积网络（CIFAR-10）。用于分类 CIFAR-10 数据集的一种卷积神经网络实现：https://github.com/tflearn/tflearn/blob/master/examples/images/convnet_cifar10.py\r\n\r\n网络中的网络。用于分类 CIFAR-10 数据集的 Network in Network 实现：https://github.com/tflearn/tflearn/blob/master/examples/images/network_in_network.py\r\nAlexnet。将 Alexnet 应用于 Oxford Flowers 17 分类任务：https://github.com/tflearn/tflearn/blob/master/examples/images/alexnet.py\r\n\r\nVGGNet。将 VGGNet 应用于 Oxford Flowers 17 分类任务：https://github.com/tflearn/tflearn/blob/master/examples/images/vgg_network.py\r\n\r\nVGGNet Finetuning (Fast Training)。使用一个预训练的 VGG 网络并将其约束到你自己的数据上，以便实现快速训练：https://github.com/tflearn/tflearn/blob/master/examples/images/vgg_network_finetuning.py\r\n\r\nRNN Pixels。使用 RNN（在像素的序列上）分类图像：https://github.com/tflearn/tflearn/blob/master/examples/images/rnn_pixels.py\r\n\r\nHighway Network。用于分类 MNIST 数据集的 Highway Network 实现：https://github.com/tflearn/tflearn/blob/master/examples/images/highway_dnn.py\r\n\r\nHighway Convolutional Network。用于分类 MNIST 数据集的 Highway Convolutional Network 实现：https://github.com/tflearn/tflearn/blob/master/examples/images/convnet_highway_mnist.py\r\n\r\nResidual Network (MNIST) (https://github.com/tflearn/tflearn/blob/master/examples/images/residual_network_mnist.py).。应用于 MNIST 分类任务的一种瓶颈残差网络（bottleneck residual network）：https://github.com/tflearn/tflearn/blob/master/examples/images/residual_network_mnist.py\r\n\r\nResidual Network (CIFAR-10)。应用于 CIFAR-10 分类任务的一种残差网络：https://github.com/tflearn/tflearn/blob/master/examples/images/residual_network_cifar10.py\r\n\r\nGoogle Inception（v3）。应用于 Oxford Flowers 17 分类任务的谷歌 Inception v3 网络：https://github.com/tflearn/tflearn/blob/master/examples/images/googlenet.py\r\n\r\n\r\n自编码器。用于 MNIST 手写数字的自编码器：https://github.com/tflearn/tflearn/blob/master/examples/images/autoencoder.py\r\n\r\n### 自然语言处理\r\n\r\n循环神经网络（LSTM），应用 LSTM 到 IMDB 情感数据集分类任务：https://github.com/tflearn/tflearn/blob/master/examples/nlp/lstm.py\r\n\r\n双向 RNN（LSTM），将一个双向 LSTM 应用到 IMDB 情感数据集分类任务：https://github.com/tflearn/tflearn/blob/master/examples/nlp/bidirectional_lstm.py\r\n\r\n动态 RNN（LSTM），利用动态 LSTM 从 IMDB 数据集分类可变长度文本：https://github.com/tflearn/tflearn/blob/master/examples/nlp/dynamic_lstm.py\r\n\r\n城市名称生成，使用 LSTM 网络生成新的美国城市名：https://github.com/tflearn/tflearn/blob/master/examples/nlp/lstm_generator_cityname.py\r\n\r\n莎士比亚手稿生成，使用 LSTM 网络生成新的莎士比亚手稿：https://github.com/tflearn/tflearn/blob/master/examples/nlp/lstm_generator_shakespeare.py\r\n\r\nSeq2seq，seq2seq 循环网络的教学示例：https://github.com/tflearn/tflearn/blob/master/examples/nlp/seq2seq_example.py\r\nCNN Seq，应用一个 1-D 卷积网络从 IMDB 情感数据集中分类词序列：https://github.com/tflearn/tflearn/blob/master/examples/nlp/cnn_sentence_classification.py\r\n\r\n### 强化学习\r\n\r\nAtari Pacman 1-step Q-Learning，使用 1-step Q-learning 教一台机器玩 Atari 游戏：https://github.com/tflearn/tflearn/blob/master/examples/reinforcement_learning/atari_1step_qlearning.py\r\n\r\n其他\r\n\r\nRecommender-Wide&Deep Network，推荐系统中 wide & deep 网络的教学示例：https://github.com/tflearn/tflearn/blob/master/examples/others/recommender_wide_and_deep.py\r\n\r\nNotebooks\r\n\r\nSpiral Classification Problem，对斯坦福 CS231n spiral 分类难题的 TFLearn 实现：https://github.com/tflearn/tflearn/blob/master/examples/notebooks/spiral.ipynb\r\n\r\n可延展的 TensorFlow\r\n层，与 TensorFlow 一起使用 TFLearn 层：https://github.com/tflearn/tflearn/blob/master/examples/extending_tensorflow/layers.py\r\n\r\n训练器，使用 TFLearn 训练器类训练任何 TensorFlow 图：https://github.com/tflearn/tflearn/blob/master/examples/extending_tensorflow/layers.py\r\n\r\nBulit-in Ops，连同 TensorFlow 使用 TFLearn built-in 操作：https://github.com/tflearn/tflearn/blob/master/examples/extending_tensorflow/builtin_ops.py\r\n\r\nSummaries，连同 TensorFlow 使用 TFLearn summarizers：https://github.com/tflearn/tflearn/blob/master/examples/extending_tensorflow/summaries.py\r\n\r\nVariables，连同 TensorFlow 使用 TFLearn Variables：https://github.com/tflearn/tflearn/blob/master/examples/extending_tensorflow/variables.py",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}